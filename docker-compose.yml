services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - spring
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - spring
    restart: unless-stopped

  msvc-usuarios:
    container_name: msvc-usuarios
    #image: usuarios
    build:
      context: ./
      dockerfile: ./msvc-usuarios/Dockerfile
    ports:
      - "8001:8001"
    env_file:
      - ./msvc-usuarios/.env
    networks:
      - spring
    depends_on:
      - postgres
    restart: unless-stopped
  msvc-cursos:
    container_name: msvc-cursos
    #image: usuarios
    build:
      context: ./
      dockerfile: ./msvc-cursos/Dockerfile
    ports:
      - "8002:8002"
    env_file:
      - ./msvc-cursos/.env
    networks:
      - spring
    depends_on:
      - postgres
      - msvc-usuarios
    restart: unless-stopped

networks:
  spring:
    driver: bridge
volumes:
  postgres:
  pgadmin: